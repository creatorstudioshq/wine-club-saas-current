[
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "d8d9cf3b-cbba-4085-a109-96b9ca002b8a",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC001-Admin Dashboard Metrics Display",
    "description": "Verify that the admin dashboard displays real-time metrics including total members, new members, revenue, and growth indicators accurately.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click 'Login as Demo Account' button to login quickly without manual input.\n        frame = context.pages[-1]\n        # Click 'Login as Demo Account' button to login quickly without manual input\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click the 'Fix Authentication' button to resolve the Square API token issue and enable real-time data fetching.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to resolve Square API Authentication Error\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Real-Time Unicorn Metrics').first).to_be_visible(timeout=1000)\n        except AssertionError:\n            raise AssertionError(\"Test case failed: The admin dashboard did not display real-time metrics including total members, new members, revenue, and growth indicators accurately as required by the test plan.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "The admin dashboard displays a persistent Square API Authentication Error (401) indicating the access token is missing or invalid. Clicking the 'Fix Authentication' button does not resolve the issue, and all real-time metrics (total members, new members, revenue, growth indicators) show zero values. Due to this authentication failure, it is not possible to verify the accuracy of the real-time metrics as required. The issue should be addressed by the development team to enable proper data fetching and metric display.\nBrowser Console Logs:\n[ERROR] Failed to load resource: the server responded with a status of 500 () (at https://aammkgdhfmkukpqkdduj.supabase.co/functions/v1/make-server-9d538b9c/square/live-inventory/1?category=all&limit=1:0:0)\n[ERROR] Live inventory fetch failed: 500 (at http://localhost:3000/src/utils/api.ts:181:20)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/176074827302893//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.755Z",
    "modified": "2025-10-18T00:44:33.212Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "d0e9da90-194d-4316-8357-2ae374401b15",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC002-Member Management and Square Customer Sync",
    "description": "Verify member lifecycle management including adding, updating members and syncing with Square customers.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click the 'Login as Wine Club Owner' button to login as the wine club owner.\n        frame = context.pages[-1]\n        # Click the 'Login as Wine Club Owner' button to login as the wine club owner.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on the 'Members' button to navigate to Member Management.\n        frame = context.pages[-1]\n        # Click on the 'Members' button to navigate to Member Management.\n        elem = frame.locator('xpath=html/body/div/div/div/div/div[2]/div/div[2]/ul/li[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click the 'Add Member' button to start adding a new member with valid details.\n        frame = context.pages[-1]\n        # Click the 'Add Member' button to add a new member.\n        elem = frame.locator('xpath=html/body/div/div/div/main/div/div/div/div[2]/button[4]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Member Sync Successful').first).to_be_visible(timeout=1000)\n        except AssertionError:\n            raise AssertionError(\"Test case failed: Member lifecycle management test did not complete successfully. The member was not added, updated, or synced with Square customers as expected.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to unresponsive 'Add Member' button on the Member Management page, preventing further verification of member lifecycle management including adding, updating members, and syncing with Square customers.\nBrowser Console Logs:\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to fetch members data: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/MembersPage.tsx:42:20)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/subscription_plans?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748305260881//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.763Z",
    "modified": "2025-10-18T00:45:05.408Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "9f5f0aeb-f71e-4832-927b-d1a6002a0765",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC003-Subscription Plan Creation and Square Customer Group Integration",
    "description": "Validate creation of subscription plans and automatic creation of corresponding Square customer groups.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click 'Login as Wine Club Owner' button to login.\n        frame = context.pages[-1]\n        # Click 'Login as Wine Club Owner' button\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Logout from current session to attempt correct login.\n        frame = context.pages[-1]\n        # Click Logout button to logout from current session\n        elem = frame.locator('xpath=html/body/div/div/div/main/header/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Login as Wine Club Owner' button to login.\n        frame = context.pages[-1]\n        # Click 'Login as Wine Club Owner' button\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[2]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Navigate to Plan Management section by clicking the appropriate menu button.\n        frame = context.pages[-1]\n        # Click 'Members' button to check if Plan Management is under Members or related section\n        elem = frame.locator('xpath=html/body/div/div/div/div/div[2]/div/div[2]/ul/li[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Locate and click the correct 'Plan Management' section or button to proceed with subscription plan creation.\n        frame = context.pages[-1]\n        # Click 'Dashboard' button to check if Plan Management is accessible from there or menu changes.\n        elem = frame.locator('xpath=html/body/div/div/div/div/div[2]/div/div[2]/ul/li/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Subscription Plan Creation Failed').first).to_be_visible(timeout=1000)\n        except AssertionError:\n            raise AssertionError(\"Test case failed: The subscription plan creation and corresponding Square customer group creation did not succeed as per the test plan.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Stopped testing due to missing 'Plan Management' section in the UI, which is critical for the task of validating subscription plan creation and Square customer group synchronization. Please fix the UI to include this section to continue testing.\nBrowser Console Logs:\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to fetch members data: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/MembersPage.tsx:42:20)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/subscription_plans?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748367702067//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.768Z",
    "modified": "2025-10-18T00:46:07.878Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "cf3aea6b-7186-426d-bfa6-313b93c13acf",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC004-Club Setup Wizard Functionality and Persistence",
    "description": "Verify multi-step club setup wizard saves Square credentials, preference settings, inventory, and shipping configurations without loss on refresh.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click 'Login as Demo Account' button to login as Wine Club Owner.\n        frame = context.pages[-1]\n        # Click 'Login as Demo Account' button to login as Wine Club Owner.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Club Setup' button to open the Club Setup Wizard.\n        frame = context.pages[-1]\n        # Click on 'Club Setup' button to open the Club Setup Wizard.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[6]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Input valid Square Location ID and Production Access Token, then click 'Save & Continue' to proceed to next step.\n        frame = context.pages[-1]\n        # Input valid Square Location ID\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('L123456789')\n        \n\n        frame = context.pages[-1]\n        # Input valid Square Production Access Token\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[3]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('EAAAIlValidProductionAccessTokenExample')\n        \n\n        # -> Click the 'Fix Authentication' button to attempt resolving the Square API authentication error.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to resolve Square API authentication error.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Club Setup' button to reopen the Club Setup Wizard and continue with the setup steps.\n        frame = context.pages[-1]\n        # Click on 'Club Setup' button to reopen the Club Setup Wizard.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[6]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Fix Authentication' button to attempt resolving the authentication error again.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to attempt resolving Square API authentication error.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Club Setup' button to open the Club Setup Wizard and continue with the setup steps.\n        frame = context.pages[-1]\n        # Click on 'Club Setup' button to open the Club Setup Wizard.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[6]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Clear the Location ID and Production Access Token input fields and input correctly formatted valid Square credentials, then attempt to save and continue.\n        frame = context.pages[-1]\n        # Clear the Location ID input field\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('')\n        \n\n        frame = context.pages[-1]\n        # Clear the Production Access Token input field\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[3]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('')\n        \n\n        frame = context.pages[-1]\n        # Input valid UUID format Square Location ID\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('00000000-0000-0000-0000-000000000000')\n        \n\n        frame = context.pages[-1]\n        # Input valid Square Production Access Token\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[3]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('EAAAIlValidProductionAccessTokenExample')\n        \n\n        # -> Click 'Save & Continue' button to attempt saving the credentials and proceed to the next step, to verify if the error clears or persists.\n        frame = context.pages[-1]\n        # Click 'Save & Continue' button to attempt saving credentials and proceed.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[4]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Fix Authentication' button to attempt resolving the Square API authentication error again.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to attempt resolving Square API authentication error.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Club Setup' button to open the Club Setup Wizard and continue with the setup steps.\n        frame = context.pages[-1]\n        # Click on 'Club Setup' button to open the Club Setup Wizard.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[6]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Clear the Location ID and Production Access Token input fields, then input a valid UUID formatted Square Location ID and a valid Production Access Token, and attempt to save and continue.\n        frame = context.pages[-1]\n        # Clear the Location ID input field\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('')\n        \n\n        frame = context.pages[-1]\n        # Clear the Production Access Token input field\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[3]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('')\n        \n\n        frame = context.pages[-1]\n        # Input valid UUID format Square Location ID\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('00000000-0000-0000-0000-000000000000')\n        \n\n        frame = context.pages[-1]\n        # Input valid Square Production Access Token\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[3]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('EAAAIlValidProductionAccessTokenExample')\n        \n\n        # -> Click 'Fix Authentication' button to attempt resolving the Square API authentication error again.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to attempt resolving Square API authentication error.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Club Setup' button to open the Club Setup Wizard and continue with the setup steps.\n        frame = context.pages[-1]\n        # Click on 'Club Setup' button to open the Club Setup Wizard.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[6]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Square credentials saved successfully').first).to_be_visible(timeout=1000)\n        except AssertionError:\n            raise AssertionError(\"Test failed: The multi-step club setup wizard did not persist Square credentials, preference settings, inventory, and shipping configurations after page refresh as required by the test plan.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "The multi-step club setup wizard fails to save Square credentials due to persistent invalid UUID syntax error for Location ID and Square API Authentication Error (401). The 'Save & Continue' button remains disabled, preventing progress to inventory and shipping configuration steps. Consequently, preference settings, inventory, and shipping configurations cannot be set or verified for persistence on refresh. The task is not fully completed due to these blocking issues.\nBrowser Console Logs:\n[ERROR] Failed to load resource: the server responded with a status of 500 () (at https://aammkgdhfmkukpqkdduj.supabase.co/functions/v1/make-server-9d538b9c/square/live-inventory/1?category=all&limit=1:0:0)\n[ERROR] Live inventory fetch failed: 500 (at http://localhost:3000/src/utils/api.ts:181:20)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/wine_clubs?select=square_location_id%2Csquare_access_token&id=eq.1:0:0)\n[ERROR] Error fetching config: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/SquareConfigPage.tsx:63:24)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/wine_clubs?select=square_location_id%2Csquare_access_token&id=eq.1:0:0)\n[ERROR] Error fetching config: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/SquareConfigPage.tsx:63:24)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/wine_clubs?select=square_location_id%2Csquare_access_token&id=eq.1:0:0)\n[ERROR] Error fetching config: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/SquareConfigPage.tsx:63:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/wine_clubs?id=eq.1&select=*:0:0)\n[ERROR] Error saving config: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/SquareConfigPage.tsx:118:20)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/wine_clubs?select=square_location_id%2Csquare_access_token&id=eq.1:0:0)\n[ERROR] Error fetching config: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/SquareConfigPage.tsx:63:24)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748594990873//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.774Z",
    "modified": "2025-10-18T00:49:55.183Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "0f6d3eba-c729-4a59-9e7e-9bba6e486f54",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC005-Customer Preferences and Custom Shipment Builder",
    "description": "Test creating global preferences and assigning custom shipments with specific wines to members properly.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click the 'Login as Demo Account' button with index 10 to login as demo wine club owner.\n        frame = context.pages[-1]\n        # Click 'Login as Demo Account' button to login as demo wine club owner\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Club Setup' button to navigate to Customer Preferences section.\n        frame = context.pages[-1]\n        # Click 'Club Setup' button to navigate to Customer Preferences section\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[6]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click the 'Fix Authentication' button to attempt to resolve the Square API token issue.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to resolve Square API token issue\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Club Setup' button to try to access Customer Preferences section and verify if authentication error persists there.\n        frame = context.pages[-1]\n        # Click 'Club Setup' button to navigate to Customer Preferences section\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[6]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Input valid Square Location ID and Production Access Token to fix authentication and enable proceeding to next setup steps.\n        frame = context.pages[-1]\n        # Input valid Square Location ID\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('L123456789')\n        \n\n        frame = context.pages[-1]\n        # Input valid Square Production Access Token\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[3]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('EAAA1234567890PRODUCTIONTOKEN')\n        \n\n        # -> Click 'Fix Authentication' button again to retry fixing the Square API token issue or refresh the page to reload the setup wizard.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to retry fixing Square API token issue\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click the 'Fix Authentication' button to attempt to resolve the Square API token issue again.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to attempt to fix Square API authentication error\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Global Wine Preferences Saved Successfully').first).to_be_visible(timeout=1000)\n        except AssertionError:\n            raise AssertionError(\"Test case failed: Creating global preferences and assigning custom shipments with specific wines to members did not complete successfully as expected.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to persistent Square API Authentication Error (401) that blocks all further progress. The 'Fix Authentication' button does not resolve the issue. Please investigate and fix the authentication problem to enable testing of global preferences and custom shipments.\nBrowser Console Logs:\n[ERROR] Failed to load resource: the server responded with a status of 500 () (at https://aammkgdhfmkukpqkdduj.supabase.co/functions/v1/make-server-9d538b9c/square/live-inventory/1?category=all&limit=1:0:0)\n[ERROR] Live inventory fetch failed: 500 (at http://localhost:3000/src/utils/api.ts:181:20)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/wine_clubs?select=square_location_id%2Csquare_access_token&id=eq.1:0:0)\n[ERROR] Error fetching config: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/SquareConfigPage.tsx:63:24)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/wine_clubs?select=square_location_id%2Csquare_access_token&id=eq.1:0:0)\n[ERROR] Error fetching config: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/SquareConfigPage.tsx:63:24)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748387765329//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.780Z",
    "modified": "2025-10-18T00:46:27.944Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "63820143-441e-4fbf-aa38-0f611a003a84",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC006-Fulfillment Workflow End-to-End",
    "description": "Validate the complete fulfillment workflow from Square order processing to shipping, including CSV export and tracking number uploads.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click 'Login as Wine Club Owner' button to login as wine club owner.\n        frame = context.pages[-1]\n        # Click 'Login as Wine Club Owner' button to login as wine club owner.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Fulfillment' button in the sidebar to access the Fulfillment Workflow section.\n        frame = context.pages[-1]\n        # Click on 'Fulfillment' button in the sidebar to access the Fulfillment Workflow section.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[4]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Mark the first order ORD-001 as picked by clicking its 'Mark Picked' button.\n        frame = context.pages[-1]\n        # Click 'Mark Picked' button for order ORD-001 to mark it as picked.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div/div[2]/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click the 'Fix Authentication' button to resolve the Square API access token issue.\n        frame = context.pages[-1]\n        # Click the 'Fix Authentication' button to resolve the Square API access token issue.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Order Fulfillment Complete').first).to_be_visible(timeout=1000)\n        except AssertionError:\n            raise AssertionError(\"Test case failed: The fulfillment workflow did not complete successfully, including Square order processing, CSV export, and tracking number uploads.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to persistent Square API Authentication Error (401) that blocks fulfillment workflow validation. The 'Fix Authentication' button does not resolve the issue. Please fix the authentication to enable further testing.\nBrowser Console Logs:\n[ERROR] Failed to load resource: the server responded with a status of 500 () (at https://aammkgdhfmkukpqkdduj.supabase.co/functions/v1/make-server-9d538b9c/square/live-inventory/1?category=all&limit=1:0:0)\n[ERROR] Live inventory fetch failed: 500 (at http://localhost:3000/src/utils/api.ts:181:20)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748296029731//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.785Z",
    "modified": "2025-10-18T00:44:56.157Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "d2806166-10f1-4396-8989-b85aa8991f54",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC007-Embeddable Signup Widget Display and Functionality",
    "description": "Ensure the embeddable signup widget displays only real subscription plans with wine previews and allows successful membership signup.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click 'Login as Demo Account' button to login as demo user.\n        frame = context.pages[-1]\n        # Click 'Login as Demo Account' button to login as demo user and access signup widget.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Fix Authentication' button to resolve Square API token issue and enable real data loading.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to resolve Square API token error and enable real subscription plans loading.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Dummy Subscription Plan').first).to_be_visible(timeout=1000)\n        except AssertionError:\n            raise AssertionError(\"Test case failed: The embeddable signup widget did not display only real subscription plans. Dummy or fallback data was detected, indicating failure to load valid backend plans as required by the test plan.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to persistent Square API Authentication Error (401) preventing access to real subscription plans and wine previews. The 'Fix Authentication' button does not resolve the issue. Please fix the authentication problem to enable further testing of the embeddable signup widget and successful membership signup flow.\nBrowser Console Logs:\n[ERROR] Failed to load resource: the server responded with a status of 500 () (at https://aammkgdhfmkukpqkdduj.supabase.co/functions/v1/make-server-9d538b9c/square/live-inventory/1?category=all&limit=1:0:0)\n[ERROR] Live inventory fetch failed: 500 (at http://localhost:3000/src/utils/api.ts:181:20)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748258150244//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.791Z",
    "modified": "2025-10-18T00:44:18.365Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "ef07245c-4902-4cbf-88ad-bcc304d2f355",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC008-SaaS Admin Portal Multi-Club Management",
    "description": "Verify SaaS administrators can manage multiple wine clubs and admin users with correct access controls.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Try to login using the 'Login as SaaS Admin' button instead of manual input.\n        frame = context.pages[-1]\n        # Click Login as SaaS Admin button to login without manual input\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Organizations' tab to view list of all wine clubs managed.\n        frame = context.pages[-1]\n        # Click Organizations tab to view wine clubs\n        elem = frame.locator('xpath=html/body/div/div/div/div/div[2]/div/div[2]/ul/li[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Add New Club' button to create a new wine club for testing.\n        frame = context.pages[-1]\n        # Click 'Add New Club' button to add a new wine club\n        elem = frame.locator('xpath=html/body/div/div/div/main/div/div/div[2]/div/div/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Access Granted to All Wine Clubs').first).to_be_visible(timeout=1000)\n        except AssertionError:\n            raise AssertionError(\"Test case failed: SaaS administrators cannot manage multiple wine clubs and admin users with correct access controls as expected.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to non-responsive 'Add New Club' button preventing further verification of multi-club management and admin user access controls. Issue reported.\nBrowser Console Logs:\n[ERROR] Failed to load resource: the server responded with a status of 500 () (at https://aammkgdhfmkukpqkdduj.supabase.co/functions/v1/make-server-9d538b9c/square/live-inventory/1?category=all&limit=1:0:0)\n[ERROR] Live inventory fetch failed: 500 (at http://localhost:3000/src/utils/api.ts:181:20)\n[ERROR] Failed to fetch wine clubs data: TypeError: api.getAllWineClubs is not a function\n    at fetchAllWineClubs (http://localhost:3000/src/components/SuperadminDashboard.tsx:29:48)\n    at http://localhost:3000/src/components/SuperadminDashboard.tsx:89:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/SuperadminDashboard.tsx:81:24)\n[ERROR] Failed to fetch wine clubs data: TypeError: api.getAllWineClubs is not a function\n    at fetchAllWineClubs (http://localhost:3000/src/components/ClubsOrganizationsPage.tsx:20:48)\n    at http://localhost:3000/src/components/ClubsOrganizationsPage.tsx:87:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/ClubsOrganizationsPage.tsx:80:24)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748281883189//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.796Z",
    "modified": "2025-10-18T00:44:42.007Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "d5b6cc0a-f25b-49f5-9752-fccddfca7493",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC009-User Authentication and Multi-Tenancy Data Isolation",
    "description": "Test secure authentication flows along with role-based portal redirection and strict multi-tenant data isolation enforcing row-level security.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click the 'Magic Link' tab to switch to magic link login mode.\n        frame = context.pages[-1]\n        # Click the 'Magic Link' tab to switch to magic link login mode.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div/div[2]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Try to login as Wine Club Owner using the provided demo credentials via the password login form.\n        frame = context.pages[-1]\n        # Input Wine Club Owner email in the email field\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('klausbellinghausen@gmail.com')\n        \n\n        frame = context.pages[-1]\n        # Input password for Wine Club Owner\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('demo123')\n        \n\n        frame = context.pages[-1]\n        # Click Sign In button to attempt login as Wine Club Owner\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Members' tab to verify member data visibility and role-based access.\n        frame = context.pages[-1]\n        # Click on 'Members' tab to verify member data visibility and role-based access.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Fix Authentication' button to attempt resolving the Square API token issue.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to resolve Square API token issue.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click the 'Refresh' button to retry syncing data from Square and check if authentication error resolves.\n        frame = context.pages[-1]\n        # Click the 'Refresh' button to retry syncing data from Square and check if authentication error resolves.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button[2]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Members' tab to verify member data visibility and role-based access for the wine club owner.\n        frame = context.pages[-1]\n        # Click on 'Members' tab to verify member data visibility and role-based access.\n        elem = frame.locator('xpath=html/body/div/div/div/div/div[2]/div/div[2]/ul/li[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Sync from Square' button to attempt syncing member data from Square API.\n        frame = context.pages[-1]\n        # Click 'Sync from Square' button to sync member data from Square API.\n        elem = frame.locator('xpath=html/body/div/div/div/main/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Logout from current session and login as a wine club member to access the customer portal.\n        frame = context.pages[-1]\n        # Click Logout button to logout from current Wine Club Owner session.\n        elem = frame.locator('xpath=html/body/div/div/div/main/header/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Input Wine Club Member credentials and login to access customer portal.\n        frame = context.pages[-1]\n        # Input Wine Club Member email in the email field\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('demo@wineclub.com')\n        \n\n        frame = context.pages[-1]\n        # Input password for Wine Club Member\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('demo123')\n        \n\n        frame = context.pages[-1]\n        # Click Sign In button to login as Wine Club Member\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Members' tab to verify member data visibility and ensure data is limited to the logged-in member's own membership and club.\n        frame = context.pages[-1]\n        # Click on 'Members' tab to verify member data visibility and data isolation for the wine club member.\n        elem = frame.locator('xpath=html/body/div/div/div/div/div[2]/div/div[2]/ul/li[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Logout from current Wine Club Member session to prepare for SaaS platform administrator login.\n        frame = context.pages[-1]\n        # Click Logout button to logout from Wine Club Member session.\n        elem = frame.locator('xpath=html/body/div/div/div/main/header/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Input SaaS platform administrator credentials and login to access the admin dashboard.\n        frame = context.pages[-1]\n        # Input SaaS platform administrator email\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('jimmy@arccom.io')\n        \n\n        frame = context.pages[-1]\n        # Input SaaS platform administrator password\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('demo123')\n        \n\n        frame = context.pages[-1]\n        # Click Sign In button to login as SaaS platform administrator\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Organizations' tab to verify visibility of all wine club tenants and their data.\n        frame = context.pages[-1]\n        # Click on 'Organizations' tab to view all wine club tenants and their data.\n        elem = frame.locator('xpath=html/body/div/div/div/div/div[2]/div/div[2]/ul/li[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Attempt to query data of other wine clubs directly via backend or admin interface to validate row-level security enforcement.\n        frame = context.pages[-1]\n        # Click on 'Users' tab to check user data access and attempt to query data of other wine clubs.\n        elem = frame.locator('xpath=html/body/div/div/div/div/div[2]/div/div[2]/ul/li[3]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        await expect(frame.locator('text=SaaS Parent Admin').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Dashboard').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Organizations').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Users').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Billing').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Settings').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=SaaS Admins').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Owners').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Admins').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Staff').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Active').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Inactive').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Manage admin users across all wine clubs').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Add New User').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=All Roles').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Jimmy ArcCom').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=jimmy@arccom.io').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=saas admin').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Active').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Never').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=10/17/2025').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Klaus Bellinghausen').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=klausbellinghausen@gmail.com').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=owner').first).to_be_visible(timeout=30000)\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "PASSED",
    "testError": "",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748609207084//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.801Z",
    "modified": "2025-10-18T00:50:09.394Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "10b3ec63-31af-40ff-80fc-70040cca85c6",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC010-Error Handling on Invalid Square API Credentials",
    "description": "Verify that invalid Square API credentials entered during Club Setup Wizard produce proper error messages and prevent progression until corrected.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click 'Login as Demo Account' to proceed to Club Setup Wizard.\n        frame = context.pages[-1]\n        # Click 'Login as Demo Account' button to login and access Club Setup Wizard\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Fix Authentication' button to open Club Setup Wizard for credential entry.\n        frame = context.pages[-1]\n        # Click 'Fix Authentication' button to open Club Setup Wizard for Square API credential entry\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Try to access the Club Setup Wizard by clicking the 'Club Setup' button in the sidebar to proceed with testing invalid Square API credentials.\n        frame = context.pages[-1]\n        # Click 'Club Setup' button in the sidebar to open Club Setup Wizard for credential entry\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[6]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Enter invalid Square API credentials in the Location ID and Production Access Token fields and attempt to save and continue.\n        frame = context.pages[-1]\n        # Enter invalid Location ID (not a UUID)\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('invalid-location-id')\n        \n\n        frame = context.pages[-1]\n        # Enter invalid Production Access Token\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[3]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('invalid-access-token')\n        \n\n        # -> Click 'Save & Continue' button to verify error message and check if progression is blocked.\n        frame = context.pages[-1]\n        # Click 'Save & Continue' button to attempt progression with invalid Square API credentials\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div[2]/div[2]/div[4]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        await expect(frame.locator('text=Error saving configuration: invalid input syntax for type uuid: \"1\"').first).to_be_visible(timeout=30000)\n        await expect(frame.locator('text=Step 1: API Credentials').first).to_be_visible(timeout=30000)\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "PASSED",
    "testError": "",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748321049886//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.806Z",
    "modified": "2025-10-18T00:45:21.176Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "3faf37c8-6511-49d9-ac7b-bd740ee1ee63",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC011-Graceful Handling of Square API Failures",
    "description": "Test application behavior when Square API is unreachable or returns errors during customer, payment, or inventory interactions.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click 'Login as Demo Account' button with index 10 to login with demo credentials.\n        frame = context.pages[-1]\n        # Click 'Login as Demo Account' button to login with demo credentials.\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Members' menu to navigate to member management for member sync testing.\n        frame = context.pages[-1]\n        # Click 'Members' menu to navigate to member management for member sync testing.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Sync from Square' button to perform member sync action and test error handling.\n        frame = context.pages[-1]\n        # Click 'Sync from Square' button to perform member sync action and test error handling.\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Square API is fully operational').first).to_be_visible(timeout=1000)\n        except AssertionError:\n            raise AssertionError(\"Test failed: Square API is unreachable or returns errors during member sync. User did not receive clear error notification and application may not have recovered gracefully.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Tested member sync with Square API unreachable scenario. The application shows a persistent Square API Authentication Error (401) on the dashboard and members page. However, clicking 'Sync from Square' does not trigger any visible error notification or UI feedback. This indicates a failure to notify the user clearly about the API failure and a lack of graceful recovery feedback. Testing stopped due to this critical issue.\nBrowser Console Logs:\n[ERROR] Failed to load resource: the server responded with a status of 500 () (at https://aammkgdhfmkukpqkdduj.supabase.co/functions/v1/make-server-9d538b9c/square/live-inventory/1?category=all&limit=1:0:0)\n[ERROR] Live inventory fetch failed: 500 (at http://localhost:3000/src/utils/api.ts:181:20)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to fetch members data: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/MembersPage.tsx:42:20)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/subscription_plans?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 () (at https://aammkgdhfmkukpqkdduj.supabase.co/functions/v1/make-server-9d538b9c/square/sync-customers:0:0)\n[ERROR] Failed to sync from Square: Error: Square customer sync failed: 404\n    at Object.syncSquareCustomers (http://localhost:3000/src/utils/api.ts:200:28)\n    at async handleSyncFromSquare (http://localhost:3000/src/components/MembersPage.tsx:91:13) (at http://localhost:3000/src/components/MembersPage.tsx:94:20)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748287128142//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.813Z",
    "modified": "2025-10-18T00:44:47.307Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "e0af6c95-edf0-4cc6-912b-f111246cbd08",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC012-UI Validation for Required Fields and Input Formats",
    "description": "Verify UI validations across forms for required fields, email formats, and invalid inputs in membership, plan creation, and signup widget.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Click 'Login as Demo Account' button at index 10 to access admin dashboard.\n        frame = context.pages[-1]\n        # Click 'Login as Demo Account' button to access admin dashboard\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click on 'Members' menu to open Member Management add/edit form.\n        frame = context.pages[-1]\n        # Click on 'Members' menu to open Member Management add/edit form\n        elem = frame.locator('xpath=html/body/div/div[2]/div/div/div[2]/div/div[2]/ul/li[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Add Member' button to open the add member form for validation testing.\n        frame = context.pages[-1]\n        # Click 'Add Member' button to open the add member form\n        elem = frame.locator('xpath=html/body/div/div[2]/div/main/div/div/div/div[2]/button[4]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Validation Passed Successfully').first).to_be_visible(timeout=3000)\n        except AssertionError:\n            raise AssertionError(\"Test case failed: UI validations for required fields, email formats, and invalid inputs in membership, plan creation, and signup widget did not pass as expected. Validation messages were not displayed or submission was not blocked.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Stopped testing due to critical UI issue: 'Add Member' form does not open on clicking the button, preventing validation tests on Member Management form. Further testing on Plan Management and Signup Widget forms cannot proceed reliably. Please fix this issue first.\nBrowser Console Logs:\n[ERROR] Failed to load resource: the server responded with a status of 500 () (at https://aammkgdhfmkukpqkdduj.supabase.co/functions/v1/make-server-9d538b9c/square/live-inventory/1?category=all&limit=1:0:0)\n[ERROR] Live inventory fetch failed: 500 (at http://localhost:3000/src/utils/api.ts:181:20)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/subscription_plans?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to fetch members data: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/MembersPage.tsx:42:20)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748283441974//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.818Z",
    "modified": "2025-10-18T00:44:43.619Z"
  },
  {
    "projectId": "b6dbbbdf-01ae-4f20-adce-379641663eba",
    "testId": "856dcacd-e4a0-4071-8c28-b2b7af7deb9a",
    "userId": "b48874e8-60d1-7075-89b6-83e015990beb",
    "title": "TC013-Real-Time Data Updates on Dashboard",
    "description": "Verify that the Admin Dashboard reflects real-time updates when data such as new members or revenue changes occur.",
    "code": "import asyncio\nfrom playwright import async_api\nfrom playwright.async_api import expect\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # -> Try to login using the 'Login as Demo Account' button at index 10 as an alternative to manual input.\n        frame = context.pages[-1]\n        # Click Login as Demo Account button to login without manual input\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Simulate a new member signup or payment through backend or API to trigger real-time update on dashboard.\n        await page.goto('http://localhost:3000/members', timeout=10000)\n        await asyncio.sleep(3)\n        \n\n        # -> Click 'Login as Demo Account' button at index 10 to login again and access Admin Dashboard.\n        frame = context.pages[-1]\n        # Click Login as Demo Account button to login again\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Simulate a new member signup or payment through backend or API to trigger real-time update on dashboard.\n        await page.goto('http://localhost:3000/dashboard', timeout=10000)\n        await asyncio.sleep(3)\n        \n\n        # -> Click 'Login as Demo Account' button at index 10 to login and access Admin Dashboard.\n        frame = context.pages[-1]\n        # Click Login as Demo Account button to login again\n        elem = frame.locator('xpath=html/body/div/div/div/div[2]/div[2]/div[2]/div/div[2]/button[3]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Simulate a new member signup or payment through backend or API to trigger real-time update on dashboard.\n        frame = context.pages[-1]\n        # Click Members button to navigate to Members page for simulating new member signup or payment\n        elem = frame.locator('xpath=html/body/div/div/div/div/div[2]/div/div[2]/ul/li[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # -> Click 'Add Member' button to simulate adding a new member and trigger real-time update on dashboard.\n        frame = context.pages[-1]\n        # Click Add Member button to open member addition form\n        elem = frame.locator('xpath=html/body/div/div/div/main/div/div/div/div[2]/button[4]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # --> Assertions to verify final state\n        frame = context.pages[-1]\n        try:\n            await expect(frame.locator('text=Real-time update successful').first).to_be_visible(timeout=1000)\n        except AssertionError:\n            raise AssertionError(\"Test failed: The Admin Dashboard did not reflect real-time updates for new members or revenue changes as expected.\")\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to non-functional 'Add Member' button preventing simulation of new member signup. Unable to verify real-time updates on Admin Dashboard. Please fix the issue to continue testing.\nBrowser Console Logs:\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to fetch dashboard data: TypeError: api.getShipments is not a function\n    at fetchDashboardData (http://localhost:3000/src/components/Dashboard.tsx:36:25)\n    at http://localhost:3000/src/components/Dashboard.tsx:96:9\n    at commitHookEffectListMount (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18169:15)\n    at commitPassiveMountEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19543:11)\n    at flushPassiveEffects (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19500:22)\n    at commitRootImpl (http://localhost:3000/node_modules/.vite/deps/chunk-AP6GYKF3.js?v=5bfc5a15:19469:13) (at http://localhost:3000/src/components/Dashboard.tsx:84:24)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/members?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)\n[ERROR] Failed to fetch members data: {code: 22P02, details: null, hint: null, message: invalid input syntax for type uuid: \"1\"} (at http://localhost:3000/src/components/MembersPage.tsx:42:20)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://aammkgdhfmkukpqkdduj.supabase.co/rest/v1/subscription_plans?select=*&wine_club_id=eq.1&order=created_at.desc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/b48874e8-60d1-7075-89b6-83e015990beb/1760748361741536//tmp/test_task/result.webm",
    "created": "2025-10-18T00:42:13.824Z",
    "modified": "2025-10-18T00:46:01.927Z"
  }
]
